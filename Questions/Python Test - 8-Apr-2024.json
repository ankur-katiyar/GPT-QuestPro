[
    {
        "id": 1,
        "question": "What will be the output of the following Python code snippet?\n\n```python\nx = 5\ny = 2\nresult = x / y\nprint(result)\n```\n",
        "answers": [
            "2.5",
            "2",
            "2.0",
            "2.5 SyntaxError"
        ],
        "correct_answer": 0
    },
    {
        "id": 2,
        "question": "What does the 'elif' keyword signify in Python?\n\n```python\nif condition1:\n    # do something\nelif condition2:\n    # do something else\nelse:\n    # do something if the above conditions are not met\n```\n",
        "answers": [
            "It indicates the beginning of a for loop.",
            "It is short for 'else if' and indicates an alternative condition.",
            "It is used to define a new function.",
            "It is not a valid Python keyword."
        ],
        "correct_answer": 1
    },
    {
        "id": 3,
        "question": "What will be the value of variable 'num' after the following code executes?\n\n```python\nnum = 10\nnum += 5\nnum -= 3\nprint(num)\n```\n",
        "answers": [
            "12",
            "10",
            "15",
            "3"
        ],
        "correct_answer": 0
    },
    {
        "id": 4,
        "question": "In Python, what is the purpose of using 'try' and 'except' blocks?\n\n```python\ntry:\n    # code that might raise an exception\nexcept Exception as e:\n    # handle the exception here\n```\n",
        "answers": [
            "To mark the end of a function.",
            "To define a new class.",
            "To catch and handle exceptions.",
            "To execute the code inside the block unconditionally."
        ],
        "correct_answer": 2
    },
    {
        "id": 5,
        "question": "What will be the output of the following list comprehension?\n\n```python\nnumbers = [1, 2, 3, 4, 5]\nsquared = [x ** 2 for x in numbers]\nprint(squared)\n```\n",
        "answers": [
            "[1, 4, 9, 16, 25]",
            "[1, 2, 3, 4, 5]",
            "[1, 3, 6, 9, 12]",
            "[2, 4, 6, 8, 10]"
        ],
        "correct_answer": 0
    },
    {
        "id": 6,
        "question": "What does the 'pass' statement do in Python?\n\n```python\nif condition:\n    pass\nelse:\n    # do something\n```\n",
        "answers": [
            "It raises an exception.",
            "It exits the loop.",
            "It allows the program to continue without any action.",
            "It is not a valid Python statement."
        ],
        "correct_answer": 2
    },
    {
        "id": 7,
        "question": "What is the purpose of using 'self' in Python class methods?\n\n```python\nclass MyClass:\n    def __init__(self, x):\n        self.x = x\n\n    def get_value(self):\n        return self.x\n```\n",
        "answers": [
            "To refer to the class itself.",
            "To define a static method.",
            "To prevent inheritance.",
            "To stop the execution of the program."
        ],
        "correct_answer": 0
    },
    {
        "id": 8,
        "question": "What will be the output of the code snippet below?\n\n```python\nx = 'hello'\nprint(x[1:3])\n```\n",
        "answers": [
            "'h'",
            "'he'",
            "'el'",
            "'ell'"
        ],
        "correct_answer": 2
    },
    {
        "id": 9,
        "question": "Which of the following statements is true about Python's 'lambda' functions?\n",
        "answers": [
            "They can have multiple return statements.",
            "They can have global variables.",
            "They are anonymous functions.",
            "They can have 'for' loops."
        ],
        "correct_answer": 2
    },
    {
        "id": 10,
        "question": "What is the output of the following code?\n\n```python\nnumbers = [1, 2, 3, 4, 5]\ndouble_evens = [x * 2 for x in numbers if x % 2 == 0]\nprint(double_evens)\n```\n",
        "answers": [
            "[2, 4, 6, 8, 10]",
            "[1, 2, 3, 4, 5]",
            "[4, 8]",
            "[1, 3, 5]"
        ],
        "correct_answer": 2
    },
    {
        "id": 11,
        "question": "What does the 'with' statement in Python do?\n\n```python\nwith open('file.txt', 'r') as file:\n    data = file.read()\n```\n",
        "answers": [
            "It is used for multiplication.",
            "It marks the beginning of a try-except block.",
            "It automatically closes the file when done.",
            "It is not a valid Python statement."
        ],
        "correct_answer": 2
    },
    {
        "id": 12,
        "question": "What will be the value of 'result' after the following code snippet?\n\n```python\nresult = 'hello'.replace('l', '')\nprint(result)\n```\n",
        "answers": [
            "'heo'",
            "'hello'",
            "'e'",
            "'o'"
        ],
        "correct_answer": 0
    },
    {
        "id": 13,
        "question": "In Python, what is the purpose of the '__str__' method in a class?\n",
        "answers": [
            "To convert the object to a string.",
            "To add two objects.",
            "To create a subclass.",
            "To raise exceptions."
        ],
        "correct_answer": 0
    },
    {
        "id": 14,
        "question": "What is the output of the following Python code snippet?\n\n```python\ndef greeting(name='Guest'):\n    return 'Hello, ' + name\n\nprint(greeting())\nprint(greeting('Alice'))\n```\n",
        "answers": [
            "Hello, Guest\nHello, Alice",
            "Hello, Alice\nHello, Guest",
            "Hello, Guest\nAlice",
            "Alice\nHello, Guest"
        ],
        "correct_answer": 0
    },
    {
        "id": 15,
        "question": "What does the 'zip()' function in Python do?\n\n```python\nlist1 = [1, 2, 3]\nlist2 = ['a', 'b', 'c']\ncombined = zip(list1, list2)\nprint(list(combined))\n```\n",
        "answers": [
            "It adds the elements of two lists together.",
            "It creates a new list with elements from both lists.",
            "It creates an iterator that aggregates elements from two or more iterables.",
            "It prints the Cartesian product of two lists."
        ],
        "correct_answer": 2
    },
    {
        "id": 16,
        "question": "What value does the 'pop()' method return when called on a Python list?\n\n```python\nmy_list = [1, 2, 3, 4, 5]\nvalue = my_list.pop(2)\nprint(value)\n```\n",
        "answers": [
            "3",
            "4",
            "5",
            "2"
        ],
        "correct_answer": 0
    },
    {
        "id": 17,
        "question": "What is a dictionary comprehension in Python?\n",
        "answers": [
            "A way to generate a new dictionary from an iterable.",
            "A way to delete key-value pairs from a dictionary.",
            "A way to convert a dictionary to a list.",
            "A way to write comments in a dictionary."
        ],
        "correct_answer": 0
    },
    {
        "id": 18,
        "question": "What will be the output of the code snippet below?\n\n```python\ndef my_func(x, y, z):\n    return x + y + z\n\ntuple_values = (1, 2, 3)\nresult = my_func(*tuple_values)\nprint(result)\n```\n",
        "answers": [
            "6",
            "(1, 2, 3)",
            "TypeError",
            "1, 2, 3"
        ],
        "correct_answer": 0
    },
    {
        "id": 19,
        "question": "What is the purpose of 'kwargs' in Python function definitions?\n",
        "answers": [
            "It stands for 'keyword arguments' and allows passing variable number of keyword arguments.",
            "It is used to specify default values for arguments.",
            "It is a way to unpack a dictionary of arguments.",
            "It is short for 'known arguments'."
        ],
        "correct_answer": 0
    },
    {
        "id": 20,
        "question": "What does the 'os' module in Python allow you to do?\n",
        "answers": [
            "Manipulate numerical data.",
            "Interact with the operating system.",
            "Define classes and objects.",
            "Perform mathematical operations like sin, cos, etc."
        ],
        "correct_answer": 1
    },
    {
        "id": 21,
        "question": "What is the purpose of the 'super()' function in Python?\n",
        "answers": [
            "It is used to round off decimal numbers.",
            "It returns the parent class object and allows access to its methods.",
            "It prints output to the console.",
            "It is a way to skip a particular iteration in a loop."
        ],
        "correct_answer": 1
    }
]